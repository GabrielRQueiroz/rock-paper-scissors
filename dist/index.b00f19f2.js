const rockButton=document.getElementById("rock"),paperButton=document.getElementById("paper"),scissorsButton=document.getElementById("scissors"),houseRockButton=document.getElementById("house-rock"),housePaperButton=document.getElementById("house-paper"),houseScissorsButton=document.getElementById("house-scissors"),pickStage=document.getElementById("action__picker"),gameStage=document.getElementById("main__game"),userPick=document.getElementById("user-pick"),housePick=document.getElementById("house-pick"),score=document.getElementById("score"),endGame=document.getElementById("game__end-button"),endGameTitle=document.getElementById("game__end-title"),HOUSE_OPTIONS=[houseRockButton,housePaperButton,houseScissorsButton];let userPreviousPick,housePreviouslySelectedButton;(!localStorage.score||localStorage<0)&&localStorage.setItem("score",0),score.innerHTML=localStorage.score;const housePickerFunction=()=>{const e=parseInt(Math.floor(3*Math.random()-.01)),s=HOUSE_OPTIONS[e];return s.classList.remove("hidden"),s.classList.add("chosen"),housePick.append(s),s},replay=()=>{endGame.classList.add("hidden"),endGameTitle.innerHTML="",housePick.classList.remove("winner"),userPick.classList.remove("winner"),gameStage.classList.remove("draw"),pickStage.append(userPreviousPick),gameStage.classList.remove("show-flex"),userPreviousPick.classList.remove("chosen"),pickStage.classList.remove("hidden")},setTimeCount=()=>{housePick.innerHTML=3;const e=setInterval((()=>{0!==parseInt(housePick.innerHTML)&&(housePick.innerHTML-=1)}),1e3);setTimeout((()=>{clearInterval(e)}),3e3)},triggerOnWin=()=>{let e=parseInt(score.innerHTML);const s=localStorage.getItem("score");localStorage.setItem("score",parseInt(s)+1),score.innerHTML=e+=1,endGame.classList.remove("hidden"),endGameTitle.innerHTML="You won"},triggerOnLoss=()=>{let e=parseInt(score.innerHTML);const s=localStorage.getItem("score");0!=s&&(localStorage.setItem("score",parseInt(s)-1),score.innerHTML=e-=1),endGame.classList.remove("hidden"),endGameTitle.innerHTML="You lost"},triggerOnDraw=()=>{endGame.classList.remove("hidden"),endGameTitle.innerHTML="Draw"},playRock=()=>{pickStage.classList.add("hidden"),gameStage.classList.add("show-flex"),userPick.append(rockButton),rockButton.classList.add("chosen"),userPreviousPick=rockButton,setTimeCount(),setTimeout((()=>{const e=housePickerFunction();switch(housePreviouslySelectedButton=e,e.id){case"house-rock":gameStage.classList.add("draw"),triggerOnDraw();break;case"house-paper":housePick.classList.add("winner"),triggerOnLoss();break;case"house-scissors":userPick.classList.add("winner"),triggerOnWin();break;default:return}}),3e3)},playPaper=()=>{pickStage.classList.add("hidden"),gameStage.classList.add("show-flex"),userPick.append(paperButton),paperButton.classList.add("chosen"),userPreviousPick=paperButton,setTimeCount(),setTimeout((()=>{const e=housePickerFunction();switch(housePreviouslySelectedButton=e,e.id){case"house-rock":userPick.classList.add("winner"),triggerOnWin();break;case"house-paper":gameStage.classList.add("draw"),triggerOnDraw();break;case"house-scissors":housePick.classList.add("winner"),triggerOnLoss();break;default:return}}),3e3)},playScissors=()=>{pickStage.classList.add("hidden"),gameStage.classList.add("show-flex"),userPick.append(scissorsButton),scissorsButton.classList.add("chosen"),userPreviousPick=scissorsButton,setTimeCount(),setTimeout((()=>{const e=housePickerFunction();switch(housePreviouslySelectedButton=e,e.id){case"house-rock":housePick.classList.add("winner"),triggerOnLoss();break;case"house-paper":userPick.classList.add("winner"),triggerOnWin();break;case"house-scissors":gameStage.classList.add("draw"),triggerOnDraw();break;default:return}}),3e3)};
//# sourceMappingURL=index.b00f19f2.js.map
