{"mappings":"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","sources":["Desktop/rock-paper-scissors-master/src/scripts/gameCommands.js"],"sourcesContent":["const rockButton = document.getElementById('rock');\r\nconst paperButton = document.getElementById('paper');\r\nconst scissorsButton = document.getElementById('scissors');\r\nconst houseRockButton = document.getElementById('house-rock');\r\nconst housePaperButton = document.getElementById('house-paper');\r\nconst houseScissorsButton = document.getElementById('house-scissors');\r\nconst pickStage = document.getElementById('action__picker');\r\nconst gameStage = document.getElementById('main__game');\r\nconst userPick = document.getElementById('user-pick');\r\nconst housePick = document.getElementById('house-pick');\r\nconst score = document.getElementById('score');\r\nconst endGame = document.getElementById('game__end-button');\r\nconst endGameTitle = document.getElementById('game__end-title');\r\n\r\nconst HOUSE_OPTIONS = [houseRockButton, housePaperButton, houseScissorsButton];\r\n\r\nlet userPreviousPick;\r\nlet housePreviouslySelectedButton;\r\n\r\nif (!localStorage.score || localStorage < 0) localStorage.setItem('score', 0);\r\nscore.innerHTML = localStorage.score;\r\n\r\nconst housePickerFunction = () => {\r\n\tconst randomHousePick = parseInt(Math.floor(Math.random() * 3 - 0.01));\r\n\r\n\tconst houseSelectedButton = HOUSE_OPTIONS[randomHousePick];\r\n\thouseSelectedButton.classList.remove('hidden');\r\n\thouseSelectedButton.classList.add('chosen');\r\n\r\n\thousePick.append(houseSelectedButton);\r\n\r\n\treturn houseSelectedButton;\r\n};\r\n\r\nconst replay = () => {\r\n\tendGame.classList.add('hidden');\r\n\tendGameTitle.innerHTML = '';\r\n\r\n\thousePick.classList.remove('winner');\r\n\tuserPick.classList.remove('winner');\r\n\tgameStage.classList.remove('draw');\r\n\r\n\tpickStage.append(userPreviousPick);\r\n\r\n\tgameStage.classList.remove('show-flex');\r\n\r\n\tuserPreviousPick.classList.remove('chosen');\r\n\r\n\tpickStage.classList.remove('hidden');\r\n};\r\n\r\nconst setTimeCount = () => {\r\n\thousePick.innerHTML = 3;\r\n\r\n\tconst countdown = setInterval(() => {\r\n\t\tconst currentNumber = parseInt(housePick.innerHTML);\r\n\r\n\t\tif (currentNumber === 0) return;\r\n\r\n\t\thousePick.innerHTML -= 1;\r\n\t}, 1 * 1000);\r\n\r\n\tcountdown;\r\n\r\n\tsetTimeout(() => {\r\n\t\tclearInterval(countdown);\r\n\t}, 3 * 1000);\r\n};\r\n\r\nconst triggerOnWin = () => {\r\n\tlet scoreNumber = parseInt(score.innerHTML);\r\n\r\n\tconst userSavedScore = localStorage.getItem('score');\r\n\tlocalStorage.setItem('score', parseInt(userSavedScore) + 1);\r\n\r\n\tscore.innerHTML = scoreNumber += 1;\r\n\r\n\tendGame.classList.remove('hidden');\r\n\tendGameTitle.innerHTML = 'You won';\r\n};\r\n\r\nconst triggerOnLoss = () => {\r\n\tlet scoreNumber = parseInt(score.innerHTML);\r\n\r\n\tconst userSavedScore = localStorage.getItem('score');\r\n\r\n\tif (userSavedScore != 0) {\r\n\t\tlocalStorage.setItem('score', parseInt(userSavedScore) - 1);\r\n\t\tscore.innerHTML = scoreNumber -= 1;\r\n\t}\r\n\r\n\tendGame.classList.remove('hidden');\r\n\tendGameTitle.innerHTML = 'You lost';\r\n};\r\n\r\nconst triggerOnDraw = () => {\r\n\tendGame.classList.remove('hidden');\r\n\tendGameTitle.innerHTML = 'Draw';\r\n};\r\n\r\nconst playRock = () => {\r\n\tpickStage.classList.add('hidden');\r\n\r\n\tgameStage.classList.add('show-flex');\r\n\tuserPick.append(rockButton);\r\n\trockButton.classList.add('chosen');\r\n\r\n\tuserPreviousPick = rockButton;\r\n\r\n\tsetTimeCount();\r\n\r\n\tsetTimeout(() => {\r\n\t\tconst houseSelectedButton = housePickerFunction();\r\n\r\n\t\thousePreviouslySelectedButton = houseSelectedButton;\r\n\r\n\t\tswitch (houseSelectedButton.id) {\r\n\t\t\tcase 'house-rock':\r\n\t\t\t\tgameStage.classList.add('draw');\r\n\t\t\t\ttriggerOnDraw();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-paper':\r\n\t\t\t\thousePick.classList.add('winner');\r\n\t\t\t\ttriggerOnLoss();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-scissors':\r\n\t\t\t\tuserPick.classList.add('winner');\r\n\t\t\t\ttriggerOnWin();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}, 3 * 1000);\r\n};\r\n\r\nconst playPaper = () => {\r\n\tpickStage.classList.add('hidden');\r\n\r\n\tgameStage.classList.add('show-flex');\r\n\tuserPick.append(paperButton);\r\n\tpaperButton.classList.add('chosen');\r\n\r\n\tuserPreviousPick = paperButton;\r\n\r\n\tsetTimeCount();\r\n\r\n\tsetTimeout(() => {\r\n\t\tconst houseSelectedButton = housePickerFunction();\r\n\r\n\t\thousePreviouslySelectedButton = houseSelectedButton;\r\n\r\n\t\tswitch (houseSelectedButton.id) {\r\n\t\t\tcase 'house-rock':\r\n\t\t\t\tuserPick.classList.add('winner');\r\n\t\t\t\ttriggerOnWin();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-paper':\r\n\t\t\t\tgameStage.classList.add('draw');\r\n\t\t\t\ttriggerOnDraw();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-scissors':\r\n\t\t\t\thousePick.classList.add('winner');\r\n\t\t\t\ttriggerOnLoss();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}, 3 * 1000);\r\n};\r\n\r\nconst playScissors = () => {\r\n\tpickStage.classList.add('hidden');\r\n\r\n\tgameStage.classList.add('show-flex');\r\n\tuserPick.append(scissorsButton);\r\n\tscissorsButton.classList.add('chosen');\r\n\r\n\tuserPreviousPick = scissorsButton;\r\n\r\n\tsetTimeCount();\r\n\r\n\tsetTimeout(() => {\r\n\t\tconst houseSelectedButton = housePickerFunction();\r\n\r\n\t\thousePreviouslySelectedButton = houseSelectedButton;\r\n\r\n\t\tswitch (houseSelectedButton.id) {\r\n\t\t\tcase 'house-rock':\r\n\t\t\t\thousePick.classList.add('winner');\r\n\t\t\t\ttriggerOnLoss();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-paper':\r\n\t\t\t\tuserPick.classList.add('winner');\r\n\t\t\t\ttriggerOnWin();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'house-scissors':\r\n\t\t\t\tgameStage.classList.add('draw');\r\n\t\t\t\ttriggerOnDraw();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\t}, 3 * 1000);\r\n};\r\n"],"names":["rockButton","document","getElementById","paperButton","scissorsButton","houseRockButton","housePaperButton","houseScissorsButton","pickStage","gameStage","userPick","housePick","score","endGame","endGameTitle","HOUSE_OPTIONS","userPreviousPick","housePreviouslySelectedButton","localStorage","setItem","innerHTML","housePickerFunction","randomHousePick","parseInt","Math","floor","random","houseSelectedButton","classList","remove","add","append","replay","setTimeCount","countdown","setInterval","setTimeout","clearInterval","triggerOnWin","scoreNumber","userSavedScore","getItem","triggerOnLoss","triggerOnDraw","playRock","id","playPaper","playScissors"],"version":3,"file":"index.b00f19f2.js.map"}